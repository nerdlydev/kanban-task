// @ts-check

import globals from "globals";
import js from "@eslint/js";
import tseslint from "typescript-eslint";
import reactPlugin from "eslint-plugin-react";
import reactHooksPlugin from "eslint-plugin-react-hooks";
import prettierConfig from "eslint-config-prettier";

export default tseslint.config(
  // 1. Global ignores
  // This replaces the `ignorePatterns` key in the old config.
  {
    ignores: [
      "dist/",
      "build/",
      "node_modules/",
      "prisma/migrations/",
    ],
  },

  // 2. Base configuration for all TypeScript files
  // This applies the core rules to your entire project.
  {
    files: ["**/*.{js,ts,jsx,tsx}"],
    // This replaces the top-level `extends` array.
    extends: [
      js.configs.recommended,
      ...tseslint.configs.recommended,
    ],
    languageOptions: {
      // Replaces top-level `parserOptions` and `parser`.
      parser: tseslint.parser,
      parserOptions: {
        ecmaVersion: 2022,
        sourceType: "module",
        // This is crucial for type-aware linting rules.
        project: ["./backend/tsconfig.json", "./frontend/tsconfig.json"],
      },
      // Replaces top-level `env`.
      globals: {
        ...globals.node,
        ...globals.browser,
        ...globals.es2022,
      },
    },
    // Replaces top-level `rules`.
    rules: {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/consistent-type-imports": "error",
      "prefer-const": "error",
      "no-var": "error",
    },
  },

  // 3. Frontend-specific configuration (replaces the first `overrides` block)
  {
    files: ["frontend/**/*.{js,jsx,ts,tsx}"],
    plugins: {
      react: reactPlugin,
      "react-hooks": reactHooksPlugin,
    },
    // Settings for the React plugin.
    settings: {
      react: {
        version: "detect",
      },
    },
    rules: {
      // Apply recommended rules from plugins.
      ...reactPlugin.configs.recommended.rules,
      ...reactHooksPlugin.configs.recommended.rules,
      // Frontend-specific rule overrides.
      "react/react-in-jsx-scope": "off", // Not needed with modern React/bundlers
      "no-console": "off", // Allow console logs in the frontend
    },
  },

  // 4. Backend-specific configuration (replaces the second `overrides` block)
  {
    files: ["backend/**/*.{js,ts}"],
    languageOptions: {
      // Override globals to be Node.js only for the backend.
      globals: {
        ...globals.node,
        ...globals.es2022,
      },
    },
    rules: {
      "no-console": "warn", // Warn about console logs in the backend
      "@typescript-eslint/no-floating-promises": "error",
    },
  },

  // 5. Prettier configuration (MUST BE LAST)
  // This disables any ESLint rules that would conflict with Prettier's formatting.
  prettierConfig,
);
